# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# source https://github.com/scientificcomputing/packages/blob/main/.github/workflows/build-publish-fenics.yml

name: Create and publish a Docker image for sub-directory

on:
  push:
    branches:
      - "!*"
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      release_tag:
        description: "Name of release tag"
        default: "latest"
        type: string
      image_name:
         description: "Subdirectory of package"
         default: "docker"
         type: string
      image_description:
         description: "Description of package"
         default: ""
         type: string
env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          labels: |
            org.opencontainers.image.title=${{ github.event.inputs.image_name }}
            org.opencontainers.image.description=${{ github.event.inputs.image_description }}
          images: ${{ github.GITHUB_REPOSITORY }}/${{ github.event.inputs.image_name }}
          tags: |
            type=raw,value=${{ github.event.inputs.release_tag }}
      - name: Trigger circleci build for ARM
        run: |
          curl \
            --request POST \
            --url https://circleci.com/api/v2/project/github/scientificcomputing/packages/pipeline \
            -u "${{ secrets.CIRCLECI_TOKEN }}:" \
            --header "Content-Type: application/json" \
            --data '{ "parameters": ${{ toJSON(github.event.inputs) }} }'
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:${{ github.event.inputs.image_name }}"
          push: true
          platforms: linux/amd64 #,linux/arm64
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ github.event.inputs.image_name }}:${{ github.event.inputs.release_tag }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ github.event.inputs.image_name }}:${{ github.event.inputs.release_tag }}
          cache-to: type=inline